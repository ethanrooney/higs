//Created by S. Henshaw 3/26/10
//Mostly Copied from geant4/examples/novice/NO2
 
#ifndef PrimaryGeneratorAction_h
#define PrimaryGeneratorAction_h 1

#include "G4VUserPrimaryGeneratorAction.hh"
#include "G4ThreeVector.hh"
#include "globals.hh"
#include "TFile.h"
#include "TH1F.h"
#include "TGraph.h"

class ExperimentConstruction;
class G4ParticleGun;
class PrimaryGeneratorMessenger;
class G4Event;

//event generator modes
enum {EPGA_ZofWorld, EPGA_CenterOfWorld, EPGA_Target, EPGA_BeamSpotTarget};

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......
 
class PrimaryGeneratorAction : public G4VUserPrimaryGeneratorAction
{
public:
  PrimaryGeneratorAction(ExperimentConstruction*);    
  ~PrimaryGeneratorAction();
  
public:
  void GeneratePrimaries(G4Event*);
  
private:
  G4ParticleGun* particleGun;
  ExperimentConstruction* myDetector;
  PrimaryGeneratorMessenger* fGunMessenger;
  G4int         fMode;           //primary generator mode
  G4ThreeVector fThreeVector;    //used to set momentum direction
  G4double      fBeamDiameter;   //beam diameter
  G4double      fTmin;           //min. phase space generated kinetic energy
  G4double      fTmax;           //max. phase space generated kinetic energy
  G4double      fThetaMin;       //min. phase space generated theta
  G4double      fThetaMax;       //max. phase space generated theta
  G4double      fPhiMin;         //min. phase space generated phi
  G4double      fPhiMax;         //max. phase space generated phi
  TGraph*       fBeamProfile;    //calculated beam energy profile
  TH1F*         fBeamProfileHist;//histogram of beam energy profile
  bool          fIsBeamProfile;  //use beam profile?
  void SetBeamZStartOfWorld(void);
  void SetBeamCenterOfWorld(void);
  void SetBeamTargetVolume(void);
  void SetBeamSpotTarget(void);
  void SetBeamProfile();

public:
  void  SetMode(G4int mode){fMode=mode;};
  G4int GetMode(){return fMode;};
  void  SetBeamDiameter(G4double diameter){fBeamDiameter=diameter;};
  void  SetTmin(G4double Tmin){fTmin=Tmin;};
  void  SetTmax(G4double Tmax){fTmax=Tmax;};
  void  SetThetaMin(G4double ThetaMin){fThetaMin=ThetaMin;};
  void  SetThetaMax(G4double ThetaMax){fThetaMax=ThetaMax;};
  void  SetPhiMin(G4double PhiMin){fPhiMin=PhiMin;};
  void  SetPhiMax(G4double PhiMax){fPhiMax=PhiMax;};
  void  GenerateSphericalAngles(G4float &theta, G4float &phi);
  void  GenerateEnFromProfile(G4float &T);

};

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

#endif


